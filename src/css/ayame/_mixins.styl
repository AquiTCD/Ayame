//== buttons
button-variant($color, $background, $border)
  color: $color
  background-color: $background
  border-color: $border
  transition-property: all
  transition-duration: 0.3s
  transition-timing-function: ease
  &:focus,
	&.focus
    color: $color
    background-color: darken($background, 10%)
    border-color: darken($border, 25%)
  &:hover
    color: $color
    background-color: darken($background, 10%)
    border-color: darken($border, 12%)
  &:active,
	&.active,
	.open > &.dropdown-toggle
    color: $color
    background-color: darken($background, 5%)
    border-color: darken($border, 6%)
    &:hover,
		&:focus,
		&.focus
      color: $color
      background-color: darken($background, 17%)
      border-color: darken($border, 25%)
  &:active,
	&.active,
	.open > &.dropdown-toggle
    background-image: none
  &.disabled,
	&[disabled],
	fieldset[disabled] &
    &,
		&:hover,
		&:focus,
		&.focus,
		&:active,
		&.active
      background-color: $background
      border-color: $border
  .badge
    color: $background
    background-color: $color

// ============================================================
// Vertical Rhythm calculate line height feeling nice
// ------------------------------------------------------------
// Requirement: $font-size-base
// follow $unit-size-base when the variable is setted
// Usage: vertical-rhythm: true
// set font-size before this function if the selector has own font-size
// ============================================================
vertical-rhythm(value)
  if value == true
    $unit-size-base ?= $font-size-base * 1.8
    lh = $unit-size-base
    lh-calc(lh, $unit-size-base)
      if @font-size > (lh / 1.5)
        lh = lh + ($unit-size-base / 2)
        return lh-calc(lh, $unit-size-base)
      else
        return lh
    line-height: lh-calc(lh, $unit-size-base)
  else
    error('expected a `vertical-rhythm: true`, but got ' + val)
// ============================================================
// Rhythmical Margin and Padding create margin and padding by vertical ryhthm
// ------------------------------------------------------------
// Rhythmical space is used by rythmical margin and padding
// just calculating proper value of space
// Requirement: $font-size-base
// follow $unit-size-base when the variable is setted
// Usage: rhtymical-margin: 1 0 1 0
// same position of ordinaly short hand(top right bottom left)
// ============================================================
rhythmical-space(value)
 $unit-size-base ?= $font-size-base * 1.8
 return $unit-size-base * value
rhythmical-margin(with-margin-top = 0, with-margin-right = 0, with-margin-bottom = 0, with-margin-left = 0)
  if with-margin-top > 0
    margin-top: rhythmical-space(with-margin-top)
  if with-margin-right > 0
    margin-right: rhythmical-space(with-margin-right)
  if with-margin-bottom > 0
    margin-bottom: rhythmical-space(with-margin-bottom)
  if with-margin-left > 0
    margin-left: rhythmical-space(with-margin-left)
rhythmical-padding(with-padding-top = 0, with-padding-right = 0, with-padding-bottom = 0, with-padding-left = 0)
  if with-padding-top > 0
    padding-top: rhythmical-space(with-padding-top)
  if with-padding-right > 0
    padding-right: rhythmical-space(with-padding-right)
  if with-padding-bottom > 0
    padding-bottom: rhythmical-space(with-padding-bottom)
  if with-padding-left > 0
    padding-left: rhythmical-space(with-padding-left)
